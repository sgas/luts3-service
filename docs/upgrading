Upgrading from SGAS 3.2 to 3.4

1. Stop SGAS

$ sudo /etc/init.d/sgas stop

2. Install new SGAS

$ tar xzf sgas-luts-service-3.3.tar.gz
$ cd sgas-luts-service-3.3
$ python setup.py build
$ sudo python setup.py install

3. Backup database

$sudo su - sgas                 # Or whatever user SGAS is running at
$ pg_dump sgas > sgas-db-backup.sql

4. Upgrade Database Schema

$ sudo su - sgas                # Or whatever user SGAS is running as
$ psql sgas                     # Or whatever the database is called
$ \i /usr/local/share/sgas/postgres/sgas-postgres-3.2-3.3-upgrade.sql
$ \i /usr/local/share/sgas/postgres/sgas-postgres-functions.sql
(and logout of postgres)

5. Start SGAS

$ sudo /etc/init.d/sgas start



Upgrading from SGAS 3.3 to 3.4

1. Stop SGAS

$ sudo /etc/init.d/sgas stop

2. Install new SGAS

$ tar xzf sgas-luts-service-3.4.tar.gz
$ cd sgas-luts-service-3.4
$ python setup.py build
$ sudo python setup.py install

3. Backup database

$sudo su - sgas                 # Or whatever user SGAS is running at
$ pg_dump sgas > sgas-db-backup.sql

4. Upgrade Database Schema

$ sudo su - sgas                # Or whatever user SGAS is running as
$ psql sgas                     # Or whatever the database is called
$ \i /usr/local/share/sgas/postgres/sgas-postgres-3.3-3.4-upgrade.sql
$ \i /usr/local/share/sgas/postgres/sgas-postgres-view.sql
$ \i /usr/local/share/sgas/postgres/sgas-postgres-functions.sql
(and logout of postgres)

5. Authorization Updates

The "check_whitelist" option in sgas.conf is no longer supported. Instead
create an entry in sgas.authz with the following structure:
"/CERT/NAME"        insert:machine_name=FQDN_IN_USAGERECORD
Alternatively, the "insert:all" declaration can be used to provide the subject
with insert rights for all machine names.

The syntax for allowing per-view access has also been changed. Change entries
from:
"/SUBJECT"      view:view_name
to:
"/SUBJECT"      view:view=view_name
Or better yet, switch to using viewgroups (see docs/views)


6. Start SGAS

$ sudo /etc/init.d/sgas start



Upgrading from SGAS 3.4.0/3.4.1 to 3.4.2

1. Stop SGAS

$ sudo /etc/init.d/sgas stop

2. Install new SGAS

$ tar xzf sgas-luts-service-3.4.2.tar.gz
$ cd sgas-luts-service-3.4.2
$ python setup.py build
$ sudo python setup.py install

3. Backup database

$sudo su - sgas                 # Or whatever user SGAS is running at
$ pg_dump sgas > sgas-db-backup.sql

4. Upgrade Database Schema

$ sudo su - sgas                # Or whatever user SGAS is running as
$ psql sgas                     # Or whatever the database is called
$ \i /usr/local/share/sgas/postgres/sgas-postgres-3.4-3.4.2-upgrade.sql
$ \i /usr/local/share/sgas/postgres/sgas-postgres-view.sql
$ \i /usr/local/share/sgas/postgres/sgas-postgres-functions.sql
(and logout of postgres)

5. Start SGAS

$ sudo /etc/init.d/sgas start



Upgrading from SGAS 3.4.2 to 3.5.0 / 3.5.1

1. Stop SGAS

$ sudo /etc/init.d/sgas stop

2. Install new SGAS

$ tar xzf sgas-luts-service-3.5.0.tar.gz
$ cd sgas-luts-service-3.5.0
$ python setup.py build
$ sudo python setup.py install

3. Backup database

$sudo su - sgas                 # Or whatever user SGAS is running at
$ pg_dump sgas > sgas-db-backup.sql

4. Upgrade Database Schema

$ sudo su - sgas                # Or whatever user SGAS is running as
$ psql sgas                     # Or whatever the database is called
$ \i /usr/local/share/sgas/postgres/sgas-postgres-3.4.2-3.5-upgrade.sql
$ \i /usr/local/share/sgas/postgres/sgas-postgres-view.sql
$ \i /usr/local/share/sgas/postgres/sgas-postgres-functions.sql
(and logout of postgres)

The upgrade script will take a bit of time to run the changes include a full
rewrite of the database.

5. Start SGAS

$ sudo /etc/init.d/sgas start



Upgrading from SGAS 3.5.0 / 3.5.1 to 3.5.1 / 3.5.2

1. Stop SGAS

$ sudo /etc/init.d/sgas stop

2. Install new SGAS

$ tar xzf sgas-luts-service-3.5.2.tar.gz
$ cd sgas-luts-service-3.5.2
$ python setup.py build
$ sudo python setup.py install

3. Backup database

$sudo su - sgas                 # Or whatever user SGAS is running at
$ pg_dump sgas > sgas-db-backup.sql

4. Start SGAS

$ sudo /etc/init.d/sgas start


Upgrading from SGAS 3.5.x to 3.6.0

1. Stop SGAS

$ sudo /etc/init.d/sgas stop

2. Install new SGAS

$ tar xzf sgas-luts-service-3.6.0.tar.gz
$ cd sgas-luts-service-3.6.0
$ python setup.py build
$ sudo python setup.py install

3. Backup database

$sudo su - sgas                 # Or whatever user SGAS is running at
$ pg_dump sgas > sgas-db-backup.sql

5. Upgrade database schema

$ sudo su - sgas                # Or whatever user SGAS is running as
$ psql sgas                     # Or whatever the database is called
$ \i /usr/local/share/sgas/postgres/sgas-postgres-3.5.x-3.6.0-upgrade.sql
$ \i /usr/local/share/sgas/postgres/sgas-postgres-view.sql
$ \i /usr/local/share/sgas/postgres/sgas-postgres-functions.sql
$ \i /usr/local/share/sgas/postgres/sgas-postgres-aggregation-rebuild.sql
(and logout of postgres)

4. Start SGAS

$ sudo /etc/init.d/sgas start


Upgrading from SGAS 3.6.0 / 3.6.1

1. Stop SGAS

$ sudo /etc/init.d/sgas stop

2. Install new SGAS

$ tar xzf sgas-luts-service-3.6.1.tar.gz
$ cd sgas-luts-service-3.6.1
$ python setup.py build
$ sudo python setup.py install

3. Backup database

$sudo su - sgas                 # Or whatever user SGAS is running at
$ pg_dump sgas > sgas-db-backup.sql

4. Upgrade Database Schema

$ sudo su - sgas                # Or whatever user SGAS is running as
$ psql sgas                     # Or whatever the database is called
$ \i /usr/local/share/sgas/postgres/sgas-postgres-3.6.0-3.6.1-upgrade.sql
(and logout of postgres)

The upgrade script should not take long.

5. Start SGAS

$ sudo /etc/init.d/sgas start


Upgrading from SGAS 3.6.1 / 3.6.2

1. Stop SGAS

$ sudo /etc/init.d/sgas stop

2. Backup database

$ sudo su - sgas                 # Or whatever user SGAS is running at
$ pg_dump sgas > sgas-db-backup.sql

3. Upgrade Database Schema

$ sudo su - sgas                # Or whatever user SGAS is running as
$ psql sgas                     # Or whatever the database is called
$ \i /usr/local/share/sgas/postgres/sgas-postgres-3.6.1-3.6.2-upgrade.sql
(and logout of postgres)

The upgrade script should not take long.

4. Start SGAS

$ sudo /etc/init.d/sgas start


Upgrading from SGAS 3.6.2 / 3.6.3

1. Stop SGAS

$ sudo /etc/init.d/sgas stop

2. Install new SGAS

$ tar xzf sgas-luts-service-3.6.3.tar.gz
$ cd sgas-luts-service-3.6.3
$ python setup.py build
$ sudo python setup.py install

3. Backup database

$ sudo su - sgas                 # Or whatever user SGAS is running at
$ pg_dump sgas > sgas-db-backup.sql

4. Check database Encoding

Run:

$ psql -c '\l' sgas

If the sgas database is something else then 'UTF8' you vill have to drop the
database and create it again with the "-E UTF8" parameter to createdb or "ENCODING='UTF8'"
to the CREATE DATABASE command in PostgreSQL.

Before dropping your database make sure you have ha good copy of your current database.

5. Upgrade Database Schema

$ sudo su - sgas                # Or whatever user SGAS is running as
$ psql sgas                     # Or whatever the database is called
$ \i /usr/local/share/sgas/postgres/sgas-postgres-3.6.2-3.6.3-upgrade.sql
(and logout of postgres)

The upgrade script may take a while depending on the size of your database.

6. Start SGAS

$ sudo /etc/init.d/sgas start


Upgrading from SGAS 3.6.3 to 3.7.0

1. Stop SGAS

$ sudo /etc/init.d/sgas stop

2. Install new SGAS

$ tar xzf sgas-luts-service-3.7.0.tar.gz
$ cd sgas-luts-service-3.7.0
$ python setup.py build
$ sudo python setup.py install

3. Backup database

$ sudo su - sgas                 # Or whatever user SGAS is running at
$ pg_dump sgas > sgas-db-backup.sql

4. Upgrade Database Schema

$ sudo su - sgas                # Or whatever user SGAS is running as
$ psql sgas                     # Or whatever the database is called
$ \i /usr/local/share/sgas/postgres/sgas-postgres-3.6.3-3.7.0-upgrade.sql
(and logout of postgres)

The upgrade script may take a while depending on the size of your database.

5. Start SGAS

$ sudo /etc/init.d/sgas start


Upgrading from SGAS 3.7.0 to 3.7.1

1. Stop SGAS

$ sudo /etc/init.d/sgas stop

2. Install new SGAS

$ tar xzf sgas-luts-service-3.7.1.tar.gz
$ cd sgas-luts-service-3.7.1
$ python setup.py build
$ sudo python setup.py install

3. Start SGAS

$ sudo /etc/init.d/sgas start


Upgrading from SGAS 3.7.1 to 3.7.2

1. Stop SGAS

$ sudo /etc/init.d/sgas stop

2. Install new SGAS

$ tar xzf sgas-luts-service-3.7.2.tar.gz
$ cd sgas-luts-service-3.7.2
$ python setup.py build
$ sudo python setup.py install

3. Backup database

$ sudo su - sgas                 # Or whatever user SGAS is running at
$ pg_dump sgas > sgas-db-backup.sql

4. Upgrade Database Schema

$ sudo su - sgas                # Or whatever user SGAS is running as
$ psql sgas                     # Or whatever the database is called
$ \i /usr/local/share/sgas/postgres/sgas-postgres-3.7.1-3.7.2-upgrade.sql
(and logout of postgres)

The upgrade script may take a while depending on the size of your database.

5. Start SGAS

$ sudo /etc/init.d/sgas start


Upgrading from SGAS 3.7.2 to 3.8.0

Some important upgrade notes:

- Backward compatability view -> view:all and insert -> jobinsert in authz.conf are removed.

- Loading of plugins must be done in sgas.conf (see docs/plugins for more information).

- No changes to the database is done.

1. Stop SGAS

$ sudo /etc/init.d/sgas stop

2. Install new SGAS

$ tar xzf sgas-luts-service-3.8.0.tar.gz
$ cd sgas-luts-service-3.8.0
$ python setup.py build
$ sudo python setup.py install

3. Start SGAS

$ sudo /etc/init.d/sgas start


Upgrading from SGAS 3.8.0 to 3.8.1

1. Stop SGAS

$ sudo /etc/init.d/sgas stop

2. Install new SGAS

$ tar xzf sgas-luts-service-3.8.0.tar.gz
$ cd sgas-luts-service-3.8.0
$ python setup.py build
$ sudo python setup.py install [--prefix=/same/prefix/as/for/the/old/installation]

3. Start SGAS

$ sudo /etc/init.d/sgas start
